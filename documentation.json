{
    "pipes": [],
    "interfaces": [
        {
            "name": "ItemDay",
            "id": "interface-ItemDay-00b0744b87cd66fe04de402453e2f73f5227d4faf14fa58d52caf585a9766981a9285c2111a34afdc473c4e436bb7ce39f6b3a6e84228626f71f9ef89cdc05d1",
            "file": "src/app/components/header-popover/header-popover.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\ninterface ItemDay {\n  AccountName: string;\n  ProjectName: string;\n  CategoryName: string;\n  ProjectColor?: string;\n}\n@Component({\n  selector: 'app-header-popover',\n  templateUrl: './header-popover.component.html',\n  styleUrls: ['./header-popover.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class HeaderPopoverComponent {\n  @Input() data: ItemDay = {\n    AccountName: 'iTexico',\n    ProjectName: 'Project',\n    CategoryName: 'Category',\n    ProjectColor: 'red',\n  };\n}\n",
            "properties": [
                {
                    "name": "AccountName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "CategoryName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "ProjectColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ProjectName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "FocusCardService",
            "id": "injectable-FocusCardService-31930ba5154dcff49f7d70046993e74297eb3aaee6413a3a814e6c95c47163b6b019377bdce10534e5cb067839fe046bba7589189efd0ec1fe2cebd90bafe0d1",
            "file": "src/app/services/focus-card/focus-card.service.ts",
            "properties": [
                {
                    "name": "_state",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_state$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventTarget",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "element$",
                    "defaultValue": "new Subject<EventTarget>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "changeState",
                    "args": [
                        {
                            "name": "target",
                            "type": "EventTarget",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "EventTarget",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getState",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubscribeElement",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<EventTarget>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FocusCardService {\n  private _state$ = new Subject<boolean>();\n  private _state: boolean = false;\n  element$ = new Subject<EventTarget>();\n  element!: EventTarget;\n\n  changeState(target?: EventTarget): void {\n    if (target) {\n      this.element = target;\n      this.element$.next(this.element);\n    }\n    this._state = !this._state;\n    this._state$.next(this._state);\n  }\n\n  getState(): boolean {\n    return this._state;\n  }\n\n  onSubscribe(): Observable<boolean> {\n    return this._state$.asObservable();\n  }\n  onSubscribeElement(): Observable<EventTarget> {\n    return this.element$.asObservable();\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "OnMouseOverItemService",
            "id": "injectable-OnMouseOverItemService-c671a9bdf937f2fe07ea49cd9ac461a65647c6f3f45b9dbe6e0b7f71ab5f7f7af4c3bab32b726e06189f55a498555b1e7b8b9da479a30604078122ce69cfa3de",
            "file": "src/app/services/item-popover/on-mouse-over-item.service.ts",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Activity",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "data$",
                    "defaultValue": "new Subject<Activity>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "popoverCaller$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "position",
                    "defaultValue": "{\n    positionX: 0,\n    positionY: 0,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Position",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "position$",
                    "defaultValue": "new Subject<Position>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "getData$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Activity>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPosition$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Position>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getState$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hidePopover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showPopover",
                    "args": [
                        {
                            "name": "data",
                            "type": "Activity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Activity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Position } from 'src/app/interfaces/popover.interface';\nimport { Activity } from '../../interfaces/data-interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnMouseOverItemService {\n  private popoverCaller$ = new Subject<boolean>();\n  private position$ = new Subject<Position>();\n  private data$ = new Subject<Activity>();\n  data!: Activity;\n  position: Position = {\n    positionX: 0,\n    positionY: 0,\n  };\n  state!: boolean;\n\n  showPopover(data: Activity, element?: HTMLElement): void {\n    this.state = true;\n    this.popoverCaller$.next(this.state);\n    if (element) {\n      let coords = element.getBoundingClientRect();\n      this.position = {\n        positionX:\n          coords.x -257,\n        positionY: coords.y - 67,\n      };\n    }\n    this.position$.next(this.position);\n    this.data = data;\n    this.data$.next(this.data);\n  }\n\n  hidePopover(): void {\n    this.state = false;\n    this.popoverCaller$.next(this.state);\n  }\n\n  getState$(): Observable<boolean> {\n    return this.popoverCaller$.asObservable();\n  }\n\n  getPosition$(): Observable<Position> {\n    return this.position$.asObservable();\n  }\n  getData$(): Observable<Activity> {\n    return this.data$.asObservable();\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "ServiceDeleteModalService",
            "id": "injectable-ServiceDeleteModalService-65282b3048652e028d04a2c4459b37ea87a616b467b8160832f571d864872d532804e103cc87c1b4cd2329ddf7068d1aced970bd13e189a23e52e949df569381",
            "file": "src/app/services/delete-modal/service-delete-modal.service.ts",
            "properties": [
                {
                    "name": "modalCaller$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "getState$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hideModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceDeleteModalService {\n  private modalCaller$ = new Subject<boolean>();\n  state!: boolean;\n\n  showModal(): void {\n    this.state = true;\n    this.modalCaller$.next(this.state);\n  }\n\n  hideModal(): void {\n    this.state = false;\n    this.modalCaller$.next(this.state);\n  }\n  getState$(): Observable<boolean> {\n    return this.modalCaller$.asObservable();\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "SnackbarService",
            "id": "injectable-SnackbarService-0d7823b5304cf2e751d7253d4047274f529cc9e39a25e32f6cda3e180aafc31c3011f246be1b0229c984187183e03fbc5e14f4f41dd340eb86e36ea97f62a64d",
            "file": "src/app/services/snackbar/snackbar.service.ts",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataSnackbar",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isClicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "snackbarCaller$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "snackbarInfoCaller$",
                    "defaultValue": "new Subject<DataSnackbar>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDataSnackbar$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<DataSnackbar>",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIsClick$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hideSnackbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDataSnackbar",
                    "args": [
                        {
                            "name": "data",
                            "type": "DataSnackbar",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "DataSnackbar",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showSnackBar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { DataSnackbar } from 'src/app/interfaces/input.interfaces';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n  isClicked!: boolean;\n  data!: DataSnackbar;\n  private snackbarCaller$ = new Subject<boolean>();\n  private snackbarInfoCaller$ = new Subject<DataSnackbar>();\n\n  showSnackBar(): void {\n     this.isClicked = true;\n      this.snackbarCaller$.next(this.isClicked);\n     }\n\n  setDataSnackbar(data?: DataSnackbar): void {\n\n    if (!data) {\n      this.data = {\n        message: 'The activity has been deleted successfully',\n        type: 'default',\n        success: true\n      }\n    } else {\n      this.data = {\n        message: data.message,\n        type: data.type,\n        success: data.success,\n        backgroundColor: data.backgroundColor\n      }\n    }\n\n\n    this.snackbarInfoCaller$.next(this.data);\n  }\n\n  hideSnackbar(): void {\n    this.isClicked = false;\n    this.snackbarCaller$.next(this.isClicked);\n  }\n\n  getIsClick$(): Observable<boolean> {\n    return this.snackbarCaller$.asObservable();\n  }\n\n  getDataSnackbar$(): Observable<DataSnackbar> {\n    return this.snackbarInfoCaller$.asObservable();\n  }\n}\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddActivityButtonComponent",
            "id": "component-AddActivityButtonComponent-9536f30fdf78cb3da1cc871ffd36202a11f59dba036bf01f425c237f53ea53fc6965d074b63cf2602f8c814964b8496c4bfee9c782250f5682ad39fd67e1e420",
            "file": "src/app/components/add-activity-button/add-activity-button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-activity-button",
            "styleUrls": [
                "./add-activity-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-activity-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'general'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"general\" | \"day\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isPublished",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "modalObservable",
                    "defaultValue": "new Observable('addActivityModal')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Observable } from 'windowed-observable';\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-add-activity-button',\n  templateUrl: './add-activity-button.component.html',\n  styleUrls: ['./add-activity-button.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class AddActivityButtonComponent {\n  @Input () type: 'general' | 'day' = 'general';\n  modalObservable: Observable = new Observable('addActivityModal');\n  isPublished: boolean = false;\n\n  handleClick() {\n    this.modalObservable.publish(true);\n    this.isPublished = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$gray: #8b8b8b;\n$bright-pink: rgb(245, 65, 98);\n$bright-pink-60: rgba(245, 65, 98, 0.6);\n\n#add-button {\n  border: none;\n  box-sizing: border-box;\n  line-height: 0;\n}\n\n.day-add-button {\n  fill: $gray;\n  background: none;\n  padding: 0;\n}\n\n.general-add-button {\n  background: $bright-pink;\n  fill: white;\n  border-radius: 50%;\n  padding: 1.5em;\n  position: relative;\n}\n\n.day-add-button:hover,\n.general-add-button:hover {\n  cursor: pointer;\n}\n\n.general-add-button:hover {\n  background: $bright-pink-60;\n}\n\n.general-add-button:hover app-tooltip-calendar{\n  display: inline-block;\n}\n\napp-tooltip-calendar{\n  display: none;\n  position: absolute;\n  left: 80px;\n  top:0%;\n}\n",
                    "styleUrl": "./add-activity-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  id=\"add-button\"\n  (click)=\"handleClick()\"\n  class=\"{{ type }}-add-button\"\n  aria-label=\"Add an activity for one or more days\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"16px\"\n    height=\"16px\"\n    viewBox=\"0 0 16 16\"\n    version=\"1.1\"\n  >\n    <g id=\"surface1\">\n      <path\n        d=\"M 16 6.667969 L 9.332031 6.667969 L 9.332031 0 L 6.667969 0 L 6.667969 6.667969 L 0 6.667969 L 0 9.332031 L 6.667969 9.332031 L 6.667969 16 L 9.332031 16 L 9.332031 9.332031 L 16 9.332031 Z M 16 6.667969 \"\n      />\n    </g>\n  </svg>\n  <app-tooltip-calendar *ngIf=\"type === 'general'\" tooltipText=\"Add an activity for one or more days\" id=\"tooltip-button\"></app-tooltip-calendar>\n</button>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-443c0e8074c3179fb15753dbf859f8032287cb4ab10010f77c112aeffb2fdb59f8d514a127e265b267654b426f03b5729174271a2813b97f29760e5aaef26477",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "srcData",
                    "defaultValue": "[\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Activity[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "defaultValue": "'nova-monthly-calendar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Activity } from './interfaces/data-interfaces';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'nova-monthly-calendar';\n\n  currentDate: Date = new Date();\n  srcData: Activity[] = [\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n    {\n      AccountName: 'Itexico',\n      ActivityDate: '2022-05-06T09:35:04',\n      ActivityID: 0,\n      CategoryName: 'Available',\n      Comments: 'string',\n      EmployeeID: 0,\n      ProjectColor: 'blue',\n      ProjectID: 0,\n      ProjectName: 'Delivery',\n      StepID: 0,\n      Task: 'esto es un ticket',\n      TypeID: 0,\n      value: 5,\n      activeInProject: false,\n    },\n  ];\n  // Insert cross-micro frontend communication\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700&display=swap\");\n\n$fontGray: rgb(74, 74, 74);\n$gray: #8b8b8b;\n$red: #d1230a;\n$blue: #3555c3;\n$green: #4caf50;\n$yellow: #ffdd42;\n$lightgreen: #5ddc26;\n$lightpink: #f97f98;\n$pink: rgb(245, 65, 98);\n$fontFamily: Poppins, sans-serif;\n$boxShadow: rgb(0 0 0 / 50%) 0px 2px 4px 0px;\n$fontBlue: rgb(53, 85, 195);\n$font-size: 12px;\n$fontWork: \"Work Sans\", sans-serif;\n$shadow-btn: offset 4px 4px 4px rgba(0, 0, 0, 0.25);\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-calendar [currentDate]=\"currentDate\" [srcData]=\"srcData\"></app-calendar>\n<app-popover></app-popover>\n<app-modal-delete></app-modal-delete>\n<app-snackbar></app-snackbar>"
        },
        {
            "name": "CalendarComponent",
            "id": "component-CalendarComponent-e8ae7d569d4532b308a9887946d390cc065ce565e48100d158971f1d5846b9104b5262cbb1fc2511dd2b1aa86bc2e3f637c0c36a6f0b42da1d10713e4a1c7191",
            "file": "src/app/components/calendar/calendar.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-calendar",
            "styleUrls": [
                "./calendar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calendar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Date | undefined",
                    "decorators": []
                },
                {
                    "name": "srcData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Activity[] | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "month",
                    "defaultValue": "this.currentDate!.getMonth()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "monthArr",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Card[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "year",
                    "defaultValue": "this.currentDate!.getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "addActivities",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "Activity[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "[] | undefined",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "Activity[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "daysOfMonth",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "finalEmptyDays",
                    "args": [
                        {
                            "name": "monthArr",
                            "type": "Card[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Card[]",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "monthArr",
                            "type": "Card[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initialEmptyDays",
                    "args": [
                        {
                            "name": "firstDayOfMonth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "firstDayOfMonth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isLeap",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Activity } from 'src/app/interfaces/data-interfaces';\nimport { Card } from 'src/app/interfaces/input.interfaces';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class CalendarComponent {\n  @Input() currentDate: Date | undefined = new Date();\n  @Input() srcData: Activity[] | undefined;\n\n  month: number = this.currentDate!.getMonth();\n  year: number = this.currentDate!.getFullYear();\n\n\tmonthArr: Card[] = [];\n\n  ngOnInit(): void {\n    //If we receive the month to render else this code: //\n    const firstDayOfMonth: number = new Date(\n      `${this.year}-${this.month + 1}-1`\n    ).getDay();\n    this.initialEmptyDays(firstDayOfMonth);\n\n    this.addActivities(this.month, this.year, this.srcData!);\n\n    this.finalEmptyDays(this.monthArr);\n\n  }\n\n  addActivities(\n    month: number,\n    year: number,\n    data: Activity[]\n  ): Card[] | undefined {\n    let day: Card = {};\n    for (\n      let index: number = 1;\n      index < this.daysOfMonth(month, year) + 1;\n      index++\n    ) {\n      let dateActivities: Activity[] = data?.filter(\n        (activity: Activity) =>\n          activity.ActivityDate.substring(0, 10) ===\n          `${year}-${month + 1 < 10 ? '0' + (month + 1) : month + 1}-${\n            index < 10 ? '0' + index : index\n          }`\n      );\n\n      day = {\n        day: index,\n        activities: dateActivities,\n        date: new Date(year, month, index),\n      };\n      this.monthArr.push(day);\n    }\n    return this.monthArr;\n  }\n\n  finalEmptyDays(monthArr: Card[]): Card[] {\n    const finalEmptyDays: Card[] = Array(\n      monthArr.length > 35 ? 42 - monthArr.length : 35 - monthArr.length\n    ).fill({});\n    monthArr.push(...finalEmptyDays);\n    return finalEmptyDays;\n  }\n\n  initialEmptyDays(firstDayOfMonth: number) {\n    const initialEmptyDays: Card[] = Array(firstDayOfMonth).fill({});\n    this.monthArr.push(...initialEmptyDays);\n  }\n\n  daysOfMonth(month: number, year: number) {\n    let daysOfMonth: number = 31;\n    if (month === 1) {\n      daysOfMonth = this.isLeap(year) ? 29 : 28;\n    } else {\n      if (month === 3 || month === 5 || month === 8 || month === 10) {\n        daysOfMonth = 30;\n      }\n    }\n    return daysOfMonth;\n  }\n\n  isLeap(year: number): boolean {\n    return year % 4 == 0 && year % 100 != 0\n      ? true\n      : year % 400 == 0\n      ? true\n      : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./calendar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container\">\n    <app-calendar-header></app-calendar-header>\n    <app-week-row [cards]=\"monthArr.slice(0,7)\"></app-week-row>\n    <app-week-row [cards]=\"monthArr.slice(7,14)\"></app-week-row>\n    <app-week-row [cards]=\"monthArr.slice(14,21)\"></app-week-row>\n    <app-week-row [cards]=\"monthArr.slice(21,28)\"></app-week-row>\n    <app-week-row *ngIf=\"monthArr.length>28\"[cards]=\"monthArr.slice(28,35)\"></app-week-row>\n    <app-week-row *ngIf=\"monthArr.length>35\" [cards]=\"monthArr.slice(35,42)\"></app-week-row>\n</div>"
        },
        {
            "name": "CalendarHeaderComponent",
            "id": "component-CalendarHeaderComponent-1ca8b53b78c512a906c1a090b061475bac6e066f4254e885abe4b4382c1a4aa3bd06f559af7aa87b50e9ae0890132c4bef49fd2f2645e5e821b718ff4f941126",
            "file": "src/app/components/calendar-header/calendar-header.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-calendar-header",
            "styleUrls": [
                "./calendar-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calendar-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dayNames",
                    "defaultValue": "[\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-calendar-header',\n  templateUrl: './calendar-header.component.html',\n  styleUrls: ['./calendar-header.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class CalendarHeaderComponent {\n  dayNames: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  flex-wrap: nowrap;\n}\n\napp-calendar-header-title {\n  width: 12%;\n}\n",
                    "styleUrl": "./calendar-header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container\" >\n    <app-calendar-header-title *ngFor=\"let dayname of dayNames\" [headerTitle]=\"dayname\"></app-calendar-header-title>\n</div>\n"
        },
        {
            "name": "CalendarHeaderTitleComponent",
            "id": "component-CalendarHeaderTitleComponent-7475830e0e945790973d05d795783698243e003079c650d44c384d97361fcee7c832d7b723dff42bc9a9f721e5193a924488d22baa60ffb0acc281ba8464b910",
            "file": "src/app/components/calendar-header-title/calendar-header-title.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-calendar-header-title",
            "styleUrls": [
                "./calendar-header-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calendar-header-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textWidth",
                    "defaultValue": "'bold'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"bold\" | \"bolder\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-calendar-header-title',\n  templateUrl: './calendar-header-title.component.html',\n  styleUrls: ['./calendar-header-title.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class CalendarHeaderTitleComponent {\n  @Input() headerTitle!: string;\n\n  @Input()\n  textColor?: string;\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  textWidth: 'bold' | 'bolder' = 'bold';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../app.component.scss\";\n\n.day-box {\n  width: 100%;\n  text-align: center;\n}\n\n.header-title-bold {\n  font-family: $fontFamily;\n  font-weight: 600;\n}\n\n.header-title-bolder {\n  font-family: $fontFamily;\n  font-weight: bolder;\n}\n\n.header-title-bold,\n.header-title-bolder {\n  margin-bottom: 5px;\n}\n",
                    "styleUrl": "./calendar-header-title.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"day-box\">\n  <p\n    class=\"header-title-{{ textWidth }}\"\n    [ngStyle]=\"{ 'background-color': backgroundColor, color: textColor }\"\n  >\n    {{ headerTitle }}\n  </p>\n</div>\n"
        },
        {
            "name": "CardFooterComponent",
            "id": "component-CardFooterComponent-7ef6c8786aeafd0c00e4a8413fca814ee145ada79659bf4311e27c2adc66aa8a9afb8fc758872d1e4762fc71185c83dab98453fb5a209fde18aa1889f353adaa",
            "file": "src/app/components/card-footer/card-footer.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-footer",
            "styleUrls": [
                "./card-footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hiddenItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalHours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'card-footer',\n  templateUrl: './card-footer.component.html',\n  styleUrls: ['./card-footer.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class CardFooterComponent {\n  @Input() totalHours!: number;\n  @Input() hiddenItems!: number;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../app.component.scss\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.card-footer {\n  display: flex;\n  justify-content: space-between;\n}\n",
                    "styleUrl": "./card-footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<footer class=\"card-footer\">\n  <card-footer-hours [totalHours]=\"totalHours\"></card-footer-hours>\n  <card-footer-hidden-items\n    [hiddenItems]=\"hiddenItems\"\n  ></card-footer-hidden-items>\n</footer>\n"
        },
        {
            "name": "CardFooterHiddenItemsComponent",
            "id": "component-CardFooterHiddenItemsComponent-253a44651498287b3c988b0e5b2f22700e60d56592091f62de6404ca5bbdcde4303c45665716dddc600952213b7adfbe62677f3c7ac5f681509978b33cc8e3ad",
            "file": "src/app/components/card-footer-hidden-items/card-footer-hidden-items.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-footer-hidden-items",
            "styleUrls": [
                "./card-footer-hidden-items.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-footer-hidden-items.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hiddenItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "isClicked",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { FocusCardService } from 'src/app/services/focus-card/focus-card.service';\n\n@Component({\n  selector: 'card-footer-hidden-items',\n  templateUrl: './card-footer-hidden-items.component.html',\n  styleUrls: ['./card-footer-hidden-items.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class CardFooterHiddenItemsComponent {\n  clicked: boolean;\n  @Input() hiddenItems!: number;\n  get focusCardService(): FocusCardService {\n    return this._focusCardService;\n  }\n\n  constructor(private _focusCardService: FocusCardService) {\n    this.clicked = this._focusCardService.getState();\n  }\n\n  isClicked(event?: Event): void {\n    if (event) {\n      this._focusCardService.changeState(event.composedPath()[5]);\n    }\n    this.clicked = this._focusCardService.getState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../app.component.scss\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.hidden-items {\n  color: $gray;\n}\n\n.hidden-items:hover {\n  cursor: pointer;\n}\n",
                    "styleUrl": "./card-footer-hidden-items.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_focusCardService",
                        "type": "FocusCardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_focusCardService",
                        "type": "FocusCardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "focusCardService": {
                    "name": "focusCardService",
                    "getSignature": {
                        "name": "focusCardService",
                        "type": "",
                        "returnType": "FocusCardService",
                        "line": 13
                    }
                }
            },
            "templateData": "<div *ngIf=\"hiddenItems\" (click)=\"isClicked($event)\" class=\"hidden-items\">\n  {{ !clicked ? hiddenItems + \" more\" : \"close\" }}\n</div>\n"
        },
        {
            "name": "CardFooterHoursComponent",
            "id": "component-CardFooterHoursComponent-eb0bec41583504dbc27f3dfc88fe1b6ba8eb5e41fd86c97b3b73114245f783bf813e10471926f2534f07e90fd340334fefca42b0350643685fd7db7cfbae3721",
            "file": "src/app/components/card-footer-hours/card-footer-hours.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-footer-hours",
            "styleUrls": [
                "./card-footer-hours.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-footer-hours.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "totalHours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'card-footer-hours',\n  templateUrl: './card-footer-hours.component.html',\n  styleUrls: ['./card-footer-hours.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class CardFooterHoursComponent {\n  @Input() totalHours!: number;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../app.component.scss\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.total-hours {\n  color: $gray;\n}\n",
                    "styleUrl": "./card-footer-hours.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div *ngIf=\"totalHours\" class=\"total-hours\">{{ totalHours }} hrs</div>\n"
        },
        {
            "name": "DayCardComponent",
            "id": "component-DayCardComponent-09412c2f451a8af5455604b38e89d236a27af906cf830a7776e133aca753166565466e563db23d3220d76ee0fc11faf8687613e27d08fe55addcc5b6bff5e66f",
            "file": "src/app/components/day-card/day-card.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-day-card",
            "styleUrls": [
                "./day-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./day-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Array<Activity> | undefined",
                    "decorators": []
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Date | undefined",
                    "decorators": []
                },
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "undefined | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'card'"
                        }
                    ]
                },
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventTarget",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "elementSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "focusableElemenet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "hiddenItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "totalHours",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Activity } from 'src/app/interfaces/data-interfaces';\nimport { FocusCardService } from 'src/app/services/focus-card/focus-card.service';\n\n@Component({\n  selector: 'app-day-card',\n  templateUrl: './day-card.component.html',\n  styleUrls: ['./day-card.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class DayCardComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() data: Array<Activity> | undefined;\n  @Input() day: undefined | number;\n  @Input() date: Date | undefined;\n\n  totalHours: number = 0;\n  hiddenItems!: number;\n  state!: boolean;\n  subscription!: Subscription;\n  element?: EventTarget;\n  elementSubscription!: Subscription;\n  focusableElemenet!: HTMLElement;\n\n  @ViewChild('card') card!: ElementRef;\n\n  constructor(private _focusCardService: FocusCardService) {}\n\n  ngOnInit(): void {\n    this.subscription = this._focusCardService\n      .onSubscribe()\n      .subscribe((state$) => (this.state = state$));\n    this.elementSubscription = this._focusCardService\n      .onSubscribeElement()\n      .subscribe((element$) => (this.element = element$));\n\n    if (this.data?.length) {\n      this.data!.forEach((activity?) => (this.totalHours += activity.value));\n      this.hiddenItems = this.data!.length <= 3 ? 0 : this.data!.length - 3;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.focusableElemenet = this.card.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.day-card, .card-container{\n  min-width: 8em;\n  height: 148px;\n  width: 100%;\n  padding: 0.5em 0.8em;\n  border: 1px #ededed solid;\n  border-radius: 0.5em;\n  max-width: 15em;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.focused {\n  width: 103%;\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 10px 0px,\n    rgb(0 0 0 / 19%) 0px 2px 10px 0px;\n  position: absolute;\n  left: -1.5%;\n  height: fit-content;z-index: 5;\n  background-color: white;\n}\n.card-container{\nposition: relative;\n\npadding: 0;\nborder: none\n}\n",
                    "styleUrl": "./day-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_focusCardService",
                        "type": "FocusCardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "_focusCardService",
                        "type": "FocusCardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"card-container\">\n    <section #card class=\"day-card {{ state && focusableElemenet === element ? 'focused' : '' }}\" aria-label=\"day card\">\n\n        <div *ngIf=\"day\" data-testid=\"day-card\">\n            <app-day-header [day]=\"day\" [hours]=\"totalHours\" [date]=\"date\"></app-day-header>\n            <app-lista-dia [arrayDia]=\"data\"></app-lista-dia>\n            <card-footer [totalHours]=\"totalHours\" [hiddenItems]=\"hiddenItems\"></card-footer>\n        </div>\n    </section>\n</div>"
        },
        {
            "name": "DayHeaderComponent",
            "id": "component-DayHeaderComponent-0df276d5f89fde0e08b654ee99a888fa18d857c070956fb31a0e1a16cdf346fbbf87a18b06fb012f845a2ccc99308eef3fdfc183a69fc26fbd949e261c597d74",
            "file": "src/app/components/day-header/day-header.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-day-header",
            "styleUrls": [
                "./day-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./day-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Date | undefined",
                    "decorators": []
                },
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "undefined | number",
                    "decorators": []
                },
                {
                    "name": "hours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonType",
                    "defaultValue": "'day'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"day\" | \"general\"",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-day-header',\n  templateUrl: './day-header.component.html',\n  styleUrls: ['./day-header.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class DayHeaderComponent {\n  @Input() day: undefined | number;\n  @Input() date: Date | undefined;\n  @Input() hours: number | undefined;\n\n  buttonType: 'day' | 'general' = 'day';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.day-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\napp-add-activity-button {\n  line-height: 0;\n}\n\n.right-elements-dh > app-warning-day {\n  padding: auto 0;\n  margin-right: 1em;\n}\n\n.right-elements-dh {\n  display: flex;\n  align-items: center;\n}\n",
                    "styleUrl": "./day-header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<header class=\"day-header\">\n  <app-number-day [dayNumber]=\"day\"></app-number-day>\n  <div class=\"right-elements-dh\">\n    <app-warning-day [hoursDay]=\"hours\" [date]=\"date\"></app-warning-day>\n    <app-add-activity-button [type]=\"buttonType\"></app-add-activity-button>\n  </div>\n</header>\n"
        },
        {
            "name": "HeaderPopoverComponent",
            "id": "component-HeaderPopoverComponent-00b0744b87cd66fe04de402453e2f73f5227d4faf14fa58d52caf585a9766981a9285c2111a34afdc473c4e436bb7ce39f6b3a6e84228626f71f9ef89cdc05d1",
            "file": "src/app/components/header-popover/header-popover.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header-popover",
            "styleUrls": [
                "./header-popover.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-popover.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "{\n    AccountName: 'iTexico',\n    ProjectName: 'Project',\n    CategoryName: 'Category',\n    ProjectColor: 'red',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ItemDay",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\ninterface ItemDay {\n  AccountName: string;\n  ProjectName: string;\n  CategoryName: string;\n  ProjectColor?: string;\n}\n@Component({\n  selector: 'app-header-popover',\n  templateUrl: './header-popover.component.html',\n  styleUrls: ['./header-popover.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class HeaderPopoverComponent {\n  @Input() data: ItemDay = {\n    AccountName: 'iTexico',\n    ProjectName: 'Project',\n    CategoryName: 'Category',\n    ProjectColor: 'red',\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$font-size: 12px;\n$fontGray: rgb(74, 74, 74);\n\np {\n  margin: 0;\n  text-align: left;\n  font-weight: 700;\n  cursor: pointer;\n  font-size: 14px;\n  width: inherit;\n  height: fit-content;\n  box-sizing: border-box;\n  color: $fontGray;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  span {\n    font-weight: 400;\n    font-size: 12px;\n    display: block;\n  }\n}\n",
                    "styleUrl": "./header-popover.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>\n  {{ data.AccountName }}\n  <span> {{ data.ProjectName }} - {{ data.CategoryName }} </span>\n</p>\n"
        },
        {
            "name": "ItemDiaComponent",
            "id": "component-ItemDiaComponent-2ddf84314bf0ee6bf6adf063e332f8540445b7368ecf35e3d311ee38c0fef30cd10fe4ff0be65a1ef93bbff010fd4ab8ab73c5799a3d462b86116accf600edbc",
            "file": "src/app/components/item-dia/item-dia.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-dia",
            "styleUrls": [
                "./item-dia.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-dia.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Activity | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Position",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "handleMouseout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleMouseover",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Activity } from 'src/app/interfaces/data-interfaces';\nimport { Position } from 'src/app/interfaces/popover.interface';\nimport { OnMouseOverItemService } from 'src/app/services/item-popover/on-mouse-over-item.service';\n\n@Component({\n  selector: 'app-item-dia',\n  templateUrl: './item-dia.component.html',\n  styleUrls: ['./item-dia.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ItemDiaComponent {\n  @Input() data: Activity | undefined;\n\n  position!: Position;\n\n  constructor(private onMouseOverItem: OnMouseOverItemService) {}\n\n  handleMouseover(element: HTMLElement): void {\n  \n    this.onMouseOverItem.showPopover(this.data!, element);\n    \n \n  }\n\n  handleMouseout(): void {\n    this.onMouseOverItem.hidePopover();\n    \n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700&display=swap\");\n@import \"../../app.component.scss\";\n\n.itemDia {\n  font-size: $font-size;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: flex-start;\n  width: 100%;\n  height: 1.5em;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n.colorFlag {\n  position: absolute;\n  width: 5px;\n  height: 1.25em;\n  box-sizing: border-box;\n  display: inline-block;\n}\n\n.container {\n  width: 100%;\n  margin: 0 auto;\n  font-family: sans-serif;\n  height: 1.5em;\n}\n\napp-p-item-dia{\n  position: relative;\n}",
                    "styleUrl": "./item-dia.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "onMouseOverItem",
                        "type": "OnMouseOverItemService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "onMouseOverItem",
                        "type": "OnMouseOverItemService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div #itemDia\n  class=\"container\"\n  id=\"itemDia\"\n  (mouseover)=\"handleMouseover(itemDia)\"\n  (mouseout)=\"handleMouseout()\"\n>\n  <div class=\"colorFlag\" id=\"colorFlag\" [style.backgroundColor]=\"data!.ProjectColor\"></div>\n  <div class=\"itemDia\">\n    <app-p-item-dia class=\"p-item-dia\" [data]=\"data\"></app-p-item-dia>\n  </div>\n</div>\n"
        },
        {
            "name": "ListaDiaComponent",
            "id": "component-ListaDiaComponent-19b4a53223fcef232cf270faefaa7be9453f388e463b05a905902e0147c1136aeecd0c4d3c2a55beb677297dab11d53e68e4f3ee469a6448d2acbbe2d199b7f2",
            "file": "src/app/components/lista-dia/lista-dia.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lista-dia",
            "styleUrls": [
                "./lista-dia.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lista-dia.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "arrayDia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Array<Activity> | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Subscription } from 'rxjs';\nimport { Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Activity } from 'src/app/interfaces/data-interfaces';\nimport { FocusCardService } from 'src/app/services/focus-card/focus-card.service';\n\n@Component({\n  selector: 'app-lista-dia',\n  templateUrl: './lista-dia.component.html',\n  styleUrls: ['./lista-dia.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ListaDiaComponent implements OnInit, OnDestroy {\n  @Input() arrayDia!: Array<Activity> | undefined;\n  subscription!: Subscription;\n  state!: boolean;\n\n  constructor(private _focusCardService: FocusCardService) {}\n\n  ngOnInit(): void {\n    this.subscription = this._focusCardService\n      .onSubscribe()\n      .subscribe((state$) => (this.state = state$));\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700&display=swap\");\n@import \"../../app.component.scss\";\n\n#listCointainer {\n  width: 100%;\n  min-height: 73px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  padding: 3px;\n\n  ul {\n    margin: 0;\n    padding: 0 1px;\n    li {\n      list-style: none;\n      text-align: start;\n      white-space: nowrap;\n      overflow: hidden;\n    }\n  }\n}\n",
                    "styleUrl": "./lista-dia.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_focusCardService",
                        "type": "FocusCardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_focusCardService",
                        "type": "FocusCardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div id=\"listCointainer\">\n  <ul *ngIf=\"!state; else elseBlock\">\n    <li *ngFor=\"let dia of arrayDia | slice: 0:3\">\n      <app-item-dia [data]=\"dia\"></app-item-dia>\n    </li>\n  </ul>\n  <ng-template #elseBlock>\n    <ul>\n      <li *ngFor=\"let dia of arrayDia\">\n        <app-item-dia [data]=\"dia\"></app-item-dia>\n      </li></ul\n  ></ng-template>\n</div>\n"
        },
        {
            "name": "ModalButtonsComponent",
            "id": "component-ModalButtonsComponent-b7601cd54c10c0b60c7475560742c90a7b20e7e5847b731928f6405286a5afba6321ec188369ea3eaafc2590c50042f6738a47364dfa17690f8e85e41d9b5d45",
            "file": "src/app/components/modal-buttons/modal-buttons.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-buttons",
            "styleUrls": [
                "./modal-buttons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'confirm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"cancel\" | \"confirm\" | \"custom\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClickModalButton",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ServiceDeleteModalService } from 'src/app/services/delete-modal/service-delete-modal.service';\nimport { SnackbarService } from 'src/app/services/snackbar/snackbar.service';\n\n@Component({\n  selector: 'app-modal-buttons',\n  templateUrl: './modal-buttons.component.html',\n  styleUrls: ['./modal-buttons.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ModalButtonsComponent{\n  @Input() type: 'cancel' | 'confirm' | 'custom' = 'confirm';\n  @Input() backgroundColor!: string;\n  @Input() color!: string;\n  message!: string;\n\n\n  constructor(private ServiceDeleteModalService: ServiceDeleteModalService, private snackbarService:SnackbarService) {}\n\n  handleClickModalButton(action: string):void {\n    if (action === 'confirm') {\n      this.message = 'yes';\n      this.snackbarService.showSnackBar();\n      this.snackbarService.setDataSnackbar()\n    } else if (action === 'cancel') {\n      this.message = 'no';\n    }\n    this.ServiceDeleteModalService.hideModal();\n  }\n\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Work+Sans:wght@100;200;300;400;500;600;700;800&display=swap\");\n@import \"../../app.component.scss\";\n\n* {\n  box-sizing: border-box;\n}\n\n.confirm-button,\n.cancel-button,\n.custom-button {\n  cursor: pointer;\n  font-family: $fontWork;\n  font-size: 1em;\n  border: none;\n  padding: 3px 10px;\n  margin: 0;\n  border-radius: 6px;\n}\n\n.confirm-button {\n  background-color: $fontBlue;\n  color: white;\n  border: 1px solid $fontBlue;\n}\n\n.cancel-button {\n  background-color: transparent;\n  border: 1px solid $red;\n  color: $red;\n}\n\n.confirm-button:active,\n.cancel-button:active {\n  box-shadow: $shadow-btn;\n  transform: translateY(3px);\n}\n",
                    "styleUrl": "./modal-buttons.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ServiceDeleteModalService",
                        "type": "ServiceDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "ServiceDeleteModalService",
                        "type": "ServiceDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button\n  type=\"button\"\n  (click)=\"handleClickModalButton(type)\"\n  class=\"{{ type }}-button\"\n  [style.backgroundColor]=\"type === 'custom' ? backgroundColor : ''\"\n  [style.color]=\"type === 'custom' ? color : ''\"\n>\n  {{type[0].toUpperCase() + type.split('').slice(1).join('') }}\n</button>\n"
        },
        {
            "name": "ModalDeleteComponent",
            "id": "component-ModalDeleteComponent-144eaa71e65a976d425cd11a21040590c707f7977812d97d117e09d84d55f6897c44004f40bf169d9f6aa4901ef4d5a6cef61187435185c959aefcf1c2788f73",
            "file": "src/app/components/modal-delete/modal-delete.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-delete",
            "styleUrls": [
                "./modal-delete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-delete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "modalState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Observable, Subscription } from 'rxjs';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ServiceDeleteModalService } from 'src/app/services/delete-modal/service-delete-modal.service';\n\n@Component({\n  selector: 'app-modal-delete',\n  templateUrl: './modal-delete.component.html',\n  styleUrls: ['./modal-delete.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class ModalDeleteComponent implements OnInit {\n  isVisible: boolean = false;\n  modalState$!: Subscription;\n\n  constructor(private ServiceDeleteModalService: ServiceDeleteModalService) {}\n\n  ngOnInit(): void {\n    this.modalState$ = this.ServiceDeleteModalService.getState$().subscribe((res) => {\n      this.isVisible = res;\n    });\n  }\n  ngOnDestroy(): void {\n    this.modalState$.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../app.component.scss\";\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n.background-modal {\n  width: 100vw;\n  height: 100vh;\n  background-color: #8b8b8b74;\n  z-index: 11;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 30%;\n  position: fixed;\n  top: 0;\n}\n\n.modal-window {\n  background-color: white;\n  width: fit-content;\n  padding: 20px 40px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  border-radius: 10px;\n}\n\napp-popover-body-text {\n  font-size: 1.2em;\n  color: $fontGray;\n  margin: 0;\n}\n\n.flex-buttons {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n",
                    "styleUrl": "./modal-delete.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ServiceDeleteModalService",
                        "type": "ServiceDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "ServiceDeleteModalService",
                        "type": "ServiceDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"background-modal\" *ngIf=\"isVisible\">\n  <div class=\"modal-window\">\n    <app-popover-body-text\n      [content]=\"'Are you sure you want to delete this?'\"\n    ></app-popover-body-text>\n    <div class=\"flex-buttons\">\n      <app-modal-buttons [type]=\"'cancel'\"></app-modal-buttons>\n      <app-modal-buttons [type]=\"'confirm'\"></app-modal-buttons>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "NumberDayComponent",
            "id": "component-NumberDayComponent-629a73ed6241ba252d20a3065cf1abf90e4b1790ab0b88d380ab6ed685c2b4e42a700dad999233dea534844a4e177c36703c9358d7225f929fd224117463fd25",
            "file": "src/app/components/number-day/number-day.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-number-day",
            "styleUrls": [
                "./number-day.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./number-day.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dayNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-number-day',\n  templateUrl: './number-day.component.html',\n  styleUrls: ['./number-day.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class NumberDayComponent {\n  @Input() dayNumber: number | undefined = 1;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Work+Sans:wght@100;200;300;400;500;600;700;800&display=swap\");\n@import \"../../app.component.scss\";\n\n.day-number {\n  margin: 0;\n  width: fit-content;\n  font-family: $fontWork;\n  font-size: 25.5px;\n  color: $gray;\n}\n",
                    "styleUrl": "./number-day.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"day-number\">{{ dayNumber }}</p>\n"
        },
        {
            "name": "PItemDiaComponent",
            "id": "component-PItemDiaComponent-51ee51cf124d922846c2840af4937bdc7e176f21cfc93c258929c6836294d20a4205b3d4b9f47ce40f58c44f9462d6eea6c71e6c8a2558228ac13a18b500a73a",
            "file": "src/app/components/p-item-dia/p-item-dia.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-p-item-dia",
            "styleUrls": [
                "./p-item-dia.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./p-item-dia.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Activity | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Activity } from 'src/app/interfaces/data-interfaces';\n\n@Component({\n  selector: 'app-p-item-dia',\n  templateUrl: './p-item-dia.component.html',\n  styleUrls: ['./p-item-dia.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class PItemDiaComponent {\n  @Input() data: Activity | undefined;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  box-sizing: border-box;\n}\n\np {\n  white-space: nowrap;\n  height: 1.5em;\n  margin: 0;\n  top: 0;\n  left: 0px;\n  -webkit-transition: 1s ease-in;\n  -moz-transition: 1s ease-in;\n  -o-transition: 1s ease-in;\n  transition: 1s ease-in;\n  text-align: left;\n  font-weight: 400;\n  cursor: pointer;\n  width: inherit;\n\n  span {\n    padding-left: 8px;\n    font-weight: 600;\n  }\n}\n\np:hover {\n  position: relative;\n  left: -65px;\n  -webkit-transition: 2s ease-in;\n  -moz-transition: 2s ease-in;\n  -o-transition: 2s ease-in;\n  transition: 2s ease-in;\n  cursor: pointer;\n}\n",
                    "styleUrl": "./p-item-dia.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>\n  <span> {{ data!.AccountName }} {{ data!.ProjectName }}</span> -\n  {{ data!.CategoryName }}\n</p>\n"
        },
        {
            "name": "PopoverBodyComponent",
            "id": "component-PopoverBodyComponent-890623a7700da5948157b44027d353c5bd0017318dba6f2891ff0c82f7db2bae7be6e756e334f77c9f6a99440175956b07ba017956d9749df04ac4643374cd8f",
            "file": "src/app/components/popover-body/popover-body.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popover-body",
            "styleUrls": [
                "./popover-body.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popover-body.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "comment",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hours",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "task",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-popover-body',\n  templateUrl: './popover-body.component.html',\n  styleUrls: ['./popover-body.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class PopoverBodyComponent {\n  @Input() comment: string = '';\n  @Input() task: string = '';\n  @Input() hours: number = 0;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.flex{\n    display: flex;\n    height: fit-content;\n    justify-content: space-between;\n    margin:0.4em;\n}\n\n.popover-body{\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  align-content: stretch;\n  height: 100%;\n}\n\n.comment{\n  height: inherit;\n  white-space: wrap;\n  margin-bottom: 8px;\n  min-height: 80%;\n \n}\n\n.ticket{\n  max-width: 70%;\n}\n\n",
                    "styleUrl": "./popover-body.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"popover-body\" aria-label=\"popover body\">\n  <app-popover-body-text\n    class=\"comment\"\n    *ngIf=\"comment\"\n    [type]=\"'comment'\"\n    [content]=\"comment\"\n  ></app-popover-body-text>\n  <div class=\"flex\">\n    <app-popover-body-text\n      *ngIf=\"task\"\n      [type]=\"'task'\"\n      [content]=\"task\"\n      class=\"ticket\"\n    ></app-popover-body-text>\n    <card-footer-hours [totalHours]=\"hours\"></card-footer-hours>\n  </div>\n</section>\n"
        },
        {
            "name": "PopoverBodyTextComponent",
            "id": "component-PopoverBodyTextComponent-149d57ea311fb0500dd2f58f7b8c49719c91941bd5b911da52881715ad01744c627a0eb16104cd921eb98d6fa0402668f65b8d42ab17d01b4fc0d18ebaaa06c1",
            "file": "src/app/components/popover-body-text/popover-body-text.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popover-body-text",
            "styleUrls": [
                "./popover-body-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popover-body-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'comment'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"comment\" | \"task\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-popover-body-text',\n  templateUrl: './popover-body-text.component.html',\n  styleUrls: ['./popover-body-text.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class PopoverBodyTextComponent {\n  @Input() content: string | undefined;\n  @Input() type: 'comment' | 'task' = 'comment';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap\");\n@import \"../../app.component.scss\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.comment-text,\n.task-text {\n  font-family: \"Roboto\", sans-serif;\n}\n\np {\n  margin: 0;\n}\n\n.comment-text {\n  color: $gray;\n  font-size: 0.9em;\n  height: fit-content;\n}\n.task-text {\n  color: $gray;\n  font-size: 12px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.comment-div {\n  width: inherit;\n  height: 95%;\n  overflow-y: scroll;\n}\n\n.comment-div::-webkit-scrollbar {\n  display: none;\n}\n\n.comment-div {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n",
                    "styleUrl": "./popover-body-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"{{ type }}-div\">\n  <p class=\"{{ type }}-text\">{{ content }}</p>\n</div>\n"
        },
        {
            "name": "PopoverButtonComponent",
            "id": "component-PopoverButtonComponent-f471da11360441e5436e453ddee07e3fe6f5096b0433b5ecb2e7dbc2949f8e9f9883ffb3c89919a82c3376d29769de36b7c87aef458c3b77d9ac6df4c200d873",
            "file": "src/app/components/popover-button/popover-button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popover-button",
            "styleUrls": [
                "./popover-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popover-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonText",
                    "defaultValue": "'update'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "modalState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "modalState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClickPopoverButton",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Observable } from 'rxjs';\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { ServiceDeleteModalService } from 'src/app/services/delete-modal/service-delete-modal.service';\n\n@Component({\n  selector: 'app-popover-button',\n  templateUrl: './popover-button.component.html',\n  styleUrls: ['./popover-button.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class PopoverButtonComponent {\n  @Input() buttonText: string = 'update';\n  modalState!: boolean;\n  isVisible: boolean = false;\n  modalState$!: Observable<boolean>;\n  message!: string;\n\n  constructor(private ServiceDeleteModalService: ServiceDeleteModalService) {}\n\n  ngOnInit(): void {}\n\n  handleClickPopoverButton(action: string) {\n    if (action === 'update') {\n      this.message = 'Update Activity';\n    } else if (action === 'clone') {\n      this.message = 'Clone an Activity';\n    } else if (action === 'delete') {\n      this.ServiceDeleteModalService.showModal();\n         }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Work+Sans:wght@100;200;300;400;500;600;700;800&display=swap\");\n@import \"../../app.component.scss\";\n\n.popover-btn {\n  cursor: pointer;\n  color: $fontBlue;\n  font-family: $fontWork;\n  font-size: 0.8em;\n  background-color: transparent;\n  border: none;\n  padding: 2px 5px;\n  margin: 0;\n  font-weight: 500;\n}\n\n.popover-btn:active {\n  box-shadow: $shadow-btn;\n  transform: translateY(3px);\n}\n",
                    "styleUrl": "./popover-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ServiceDeleteModalService",
                        "type": "ServiceDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "ServiceDeleteModalService",
                        "type": "ServiceDeleteModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button\n  type=\"button\"\n  class=\"popover-btn\"\n  (click)=\"handleClickPopoverButton(buttonText)\"\n>\n  {{ buttonText }}\n</button>\n"
        },
        {
            "name": "PopoverComponent",
            "id": "component-PopoverComponent-f917fcdc817693802f2e2ffe47b77686e162965ed29f739a62adcee170696871674dc45668d0c33a5edc27f60839a29def59b070c9d3a01d8c217462105a0d4a",
            "file": "src/app/components/popover/popover.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popover",
            "styleUrls": [
                "./popover.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popover.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "{\n    AccountName: '',\n    ActivityDate: '',\n    ActivityID: 0,\n    CategoryName: '',\n    Comments: '',\n    EmployeeID: 0,\n    ProjectColor: '',\n    ProjectID: 0,\n    ProjectName: '',\n    StepID: 0,\n    TypeID: 0,\n    value: 0,\n    activeInProject: false,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Activity",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "popoverState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "position",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Position | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "position$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "handleMousemove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleMouseout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { Activity } from 'src/app/interfaces/data-interfaces';\nimport { Position } from 'src/app/interfaces/popover.interface';\nimport { OnMouseOverItemService } from 'src/app/services/item-popover/on-mouse-over-item.service';\n\n@Component({\n  selector: 'app-popover',\n  templateUrl: './popover.component.html',\n  styleUrls: ['./popover.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class PopoverComponent implements OnInit {\n  isVisible: boolean = false;\n  popoverState$!: Subscription;\n  position$!:Subscription;\n  position: Position | undefined = undefined;\n  data$!: Subscription;\n  @Input() data: Activity = {\n    AccountName: '',\n    ActivityDate: '',\n    ActivityID: 0,\n    CategoryName: '',\n    Comments: '',\n    EmployeeID: 0,\n    ProjectColor: '',\n    ProjectID: 0,\n    ProjectName: '',\n    StepID: 0,\n    TypeID: 0,\n    value: 0,\n    activeInProject: false,\n  };\n\n  constructor(private onMouseOverItem: OnMouseOverItemService) {}\n\n  ngOnInit(): void {\n    this.popoverState$ = this.onMouseOverItem.getState$().subscribe((res) => {\n      this.isVisible = res;\n    });\n    this.position$ = this.onMouseOverItem.getPosition$().subscribe((res) => {\n      this.position = res;\n    });\n    this.data$ = this.onMouseOverItem.getData$().subscribe((res) => {\n      this.data = res;\n    });\n  }\n  ngOnDestroy(): void {\n    this.data$.unsubscribe();\n    this.position$.unsubscribe();\n    this.popoverState$.unsubscribe();\n  }\n\n  handleMouseout() {\n    this.isVisible = false;\n  }\n\n  handleMousemove() {\n    this.isVisible = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700&display=swap\");\n@import \"../../app.component.scss\";\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n}\n\n.main-container {\n  display: flex;\n  flex-direction: row;\n  width: 20em;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  position: fixed;\n  z-index: 9;\n}\n\n.container {\n  background-color: white;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  border: solid 1px $gray;\n  width: 16em;\n  font-family: sans-serif;\n  height: 11em;\n  border-radius: 4px;\n  left: 18px;\n  z-index: 3;\n\n  .colorFlag {\n    width: 5px;\n    height: 100%;\n    z-index: 3;\n    border-top-left-radius: 3px;\n    border-bottom-left-radius: 3px;\n    position: absolute;\n  }\n  .main {\n    font-size: $font-size;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: space-between;\n    width: 95%;\n    height: 100%;\n    margin-left: 8px;\n    border-radius: 0 4px 0 4px;\n    border-bottom-right-radius: 4px;\n\n    app-header-popover {\n      width: 100%;\n      border-radius: 0 6px 0 6px;\n      background-color: white;\n      max-height: 30%;\n    }\n    .comment {\n      min-height: 40%;\n      max-height: 50%;\n      width: 100%;\n    }\n    .popover-ticket-hours {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      flex-wrap: nowrap;\n\n      justify-content: space-between;\n      align-items: flex-start;\n      height: 10%;\n      app-popover-body-text {\n        max-width: 80%;\n        max-height: 100%;\n      }\n    }\n    app-popover-list-footer {\n      background-color: none;\n      margin-top: 3px;\n\n      border-top: solid 1px $gray;\n    }\n  }\n}\n.pointer {\n  left: 14.33em;\n  border: 8px solid $gray;\n  border-right-color: transparent;\n  border-left-color: transparent;\n  border-width: 0px 30px 60px;\n  transform: rotate(90deg);\n  z-index: -2;\n  position: absolute;\n}\n\n.pointer2 {\n  left: 14.2em;\n  border: 8px solid white;\n  border-right-color: transparent;\n  border-left-color: transparent;\n  border-width: 0px 29.7px 59.7px;\n  transform: rotate(90deg);\n  z-index: 1;\n  position: absolute;\n}\n",
                    "styleUrl": "./popover.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "onMouseOverItem",
                        "type": "OnMouseOverItemService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "onMouseOverItem",
                        "type": "OnMouseOverItemService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section\n  class=\"main-container\"\n  [style.display]=\"isVisible ? 'flex' : 'none'\"\n  (mousemove)=\"handleMousemove()\"\n  (mouseout)=\"handleMouseout()\"\n  [style.left.px]=\"position?.positionX\"\n  [style.top.px]=\"position?.positionY\"\n>\n  <div class=\"container\">\n    <div class=\"colorFlag\" [style.backgroundColor]=\"data.ProjectColor\"></div>\n    <div class=\"main\">\n      <app-header-popover [data]=\"data\"></app-header-popover>\n\n      <app-popover-body-text\n        class=\"comment\"\n        [type]=\"'comment'\"\n        [content]=\"data.Comments\"\n      ></app-popover-body-text>\n      <section class=\"popover-ticket-hours\">\n        <app-popover-body-text\n          [type]=\"'task'\"\n          [content]=\"data.Task\"\n        ></app-popover-body-text>\n        <card-footer-hours [totalHours]=\"data.value\"></card-footer-hours>\n      </section>\n      <app-popover-list-footer></app-popover-list-footer>\n    </div>\n  </div>\n  <div class=\"pointer\"></div>\n  <div class=\"pointer2\"></div>\n</section>\n"
        },
        {
            "name": "PopoverListFooterComponent",
            "id": "component-PopoverListFooterComponent-933cba21ccbfad1c4146349daf7f5bae064f6a021862a96071703ab545c605b24f2c2cddbd1a467b4d6d32a4f638c4c2fbba33534fc29a1d4a2202b572f8a767",
            "file": "src/app/components/popover-list-footer/popover-list-footer.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popover-list-footer",
            "styleUrls": [
                "./popover-list-footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popover-list-footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttons",
                    "defaultValue": "['update', 'clone', 'delete']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-popover-list-footer',\n  templateUrl: './popover-list-footer.component.html',\n  styleUrls: ['./popover-list-footer.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class PopoverListFooterComponent {\n  @Input() buttons: string[] = ['update', 'clone', 'delete'];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".popover-list-footer {\n  display: flex;\n  justify-content: space-around;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n",
                    "styleUrl": "./popover-list-footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"popover-list-footer\">\n  <app-popover-button\n    *ngFor=\"let button of buttons\"\n    [buttonText]=\"button\"\n  ></app-popover-button>\n</div>\n"
        },
        {
            "name": "SnackbarComponent",
            "id": "component-SnackbarComponent-12dd920c3d55da3b990ccb0b71a581f5a40532f3a5bcf9d864e2db7d9b8b15722905b9a6d3fde87129cbf3af7bdb9d8981e88695f04f5da0588486a16fe90eca",
            "file": "src/app/components/snackbar/snackbar.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [
                "./snackbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snackbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "data$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isClicked$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"custom\"",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "getData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIsVisible",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SnackbarService } from 'src/app/services/snackbar/snackbar.service';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class SnackbarComponent implements OnInit, OnDestroy{\n  message!: string;\n  type!: 'default' | 'custom';\n  backgroundColor: string |undefined;\n  success!: boolean;\n  isClicked$!: Subscription;\n  data$!: Subscription;\n  isVisible:boolean | undefined;\n\n  constructor(private snackbarService: SnackbarService){}\n \n  ngOnInit():void{\n    this.getIsVisible();\n    this.getData();\n   \n  }\n\n  getData() {\n    this.data$ = this.snackbarService.getDataSnackbar$().subscribe(res => {\n      this.message = res.message;\n      this.type = res.type;\n      this.success = res.success;\n      this.backgroundColor = res.backgroundColor!;\n        });\n  }\n\n  getIsVisible() {\n    this.isClicked$ = this.snackbarService.getIsClick$().subscribe(res => {\n      this.isVisible = res;\n      setTimeout(() => {\n        this.snackbarService.hideSnackbar();\n      }, 3000);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.isClicked$.unsubscribe();\n    this.data$.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  box-sizing: border-box;\n}\n.snackbar-container {\n  position: absolute;\n  bottom: 20px;\n  left: 30px;\n  width: max-content;\n  min-width: 20em;\n  height: 3em;\n  border-radius: 4px;\n  padding: 1em;\n  display: flex;\n  align-items: center;\n  section {\n    width: fit-content;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    svg {\n      margin-right: 3px;\n      width: 14px;\n      height: 14px;\n      path {\n        fill: white;\n      }\n    }\n  }\n  p {\n    margin: 0;\n    padding: 0;\n    font-size: 11px;\n    color: white;\n  }\n}\n.custom {\n  p {\n    color: black;\n  }\n}\n",
                    "styleUrl": "./snackbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "snackbarService",
                        "type": "SnackbarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div\n  *ngIf=\"isVisible\"\n  class=\"snackbar-container\"\n  [style.backgroundColor]=\"\n    type !== 'custom' ? (success ? '#43A047' : '#d1230a') : backgroundColor\n  \"\n>\n  <section *ngIf=\"type !== 'custom'\" [ngSwitch]=\"success\">\n    <svg\n      *ngSwitchCase=\"true\"\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      id=\"d9090658-f907-4d85-8bc1-743b70378e93\"\n      data-name=\"Livello 1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill=\"white\"\n        id=\"70fa6808-131f-4233-9c3a-fc089fd0c1c4\"\n        data-name=\"done circle\"\n        d=\"M12,0A12,12,0,1,0,24,12,12,12,0,0,0,12,0ZM11.52,17L6,12.79l1.83-2.37L11.14,13l4.51-5.08,2.24,2Z\"\n      />\n    </svg>\n    <svg\n      *ngSwitchCase=\"false\"\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 294.995 294.995\"\n      style=\"enable-background: new 0 0 294.995 294.995\"\n      xml:space=\"preserve\"\n    >\n      <path\n        d=\"M291.874,248.279L165.605,26.526c-4.007-7.037-10.776-11.26-18.107-11.26s-14.101,4.202-18.107,11.239L3.121,248.238\n\t\tc-3.979,6.989-4.164,15.013-0.493,21.326c3.67,6.313,10.663,10.165,18.705,10.165h252.329c8.042,0,15.035-3.852,18.705-10.165\n\t\tC296.038,263.251,295.854,255.268,291.874,248.279z M146.665,86.229c9.665,0,17.5,7.835,17.5,17.5v63c0,9.665-7.835,17.5-17.5,17.5\n\t\tc-9.665,0-17.5-7.835-17.5-17.5v-63C129.165,94.064,137,86.229,146.665,86.229z M147.498,204.005c9.665,0,17.5,7.835,17.5,17.5\n\t\tc0,9.665-7.835,17.5-17.5,17.5c-9.665,0-17.5-7.835-17.5-17.5C129.998,211.84,137.833,204.005,147.498,204.005z\"\n      />\n    </svg>\n    <svg *ngSwitchDefault></svg>\n  </section>\n  <p>{{ message }}</p>\n</div>\n"
        },
        {
            "name": "TooltipCalendarComponent",
            "id": "component-TooltipCalendarComponent-3d710c543b714834ca73f66073e4fbd558235fb5e324b9cd753f3d5d210b874fa1c1def2ba28a02220cf9d853cdfdb1f21f3168fe874156b863ea0dfb81fec40",
            "file": "src/app/components/tooltip-calendar/tooltip-calendar.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip-calendar",
            "styleUrls": [
                "./tooltip-calendar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip-calendar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tooltipText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltip-calendar',\n  templateUrl: './tooltip-calendar.component.html',\n  styleUrls: ['./tooltip-calendar.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class TooltipCalendarComponent {\n  @Input() tooltipText!: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  box-sizing: border-box;\n}\n\n.tooltip-box {\n  position: absolute;\n  width: max-content;\n  background: black;\n  line-height: 20px;\n  z-index: 5;\n  text-align: center;\n  color: white;\n  font-size: 0.7em;\n  padding: 6px 8px;\n  border-radius: 5px;\n  left: 12px;\n  top: 20px;\n}\n",
                    "styleUrl": "./tooltip-calendar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"tooltip-box\">{{ tooltipText }}</span>\n"
        },
        {
            "name": "WarningDayComponent",
            "id": "component-WarningDayComponent-0c6194c1b4dd828f329b91dfab47fec57298d0ff4b0964f4e8144b49fb0d05a7c291e546667870cf8648fc8fce19fe5475cf28340bacbe1ee0892eff29f180e8",
            "file": "src/app/components/warning-day/warning-day.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-warning-day",
            "styleUrls": [
                "./warning-day.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./warning-day.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Date | undefined",
                    "decorators": []
                },
                {
                    "name": "hoursDay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "weekDay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-warning-day',\n  templateUrl: './warning-day.component.html',\n  styleUrls: ['./warning-day.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class WarningDayComponent implements OnInit {\n  @Input() hoursDay: number | undefined;\n  @Input() date: Date | undefined;\n\n  weekDay?: number;\n  message?: string;\n\n  ngOnInit(): void {\n    if (this.date !== undefined && this.hoursDay !== undefined &&this.hoursDay >=0) {\n      this.weekDay = this.date!.getDay();\n      if (\n        (this.weekDay !== 0) &&\n        (this.weekDay !== 6) &&\n        (this.date! < new Date()) &&\n        (this.hoursDay! < 8)\n      ) {\n        this.message = `You have ${8 - this.hoursDay!} missing hours`;\n      } else this.hoursDay = undefined;\n    }\n\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.warning-day {\n  width: fit-content;\n  position: relative;\n  font-size: 1em;\n  font-weight: bold;\n}\n\n.warning-day:hover app-tooltip-calendar {\n  display: inline-block;\n}\n\napp-tooltip-calendar {\n  display: none;\n}\n",
                    "styleUrl": "./warning-day.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"warning-day\" *ngIf=\"hoursDay !== undefined\">\n  !<app-tooltip-calendar *ngIf=\"message !== undefined\"\n    [tooltipText]=\"message\"\n    id=\"tooltip\"\n  ></app-tooltip-calendar>\n</p>\n"
        },
        {
            "name": "WeekRowComponent",
            "id": "component-WeekRowComponent-3568e988ac689fcfb9cceba11e5f2d705b971d7defc1681ea76cfdfec56031cf5590b4d6d9299a2be1ccf6f972d5c077d8d3ebe7cfdff6cd8b2856d9e7cc30f1",
            "file": "src/app/components/week-row/week-row.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-week-row",
            "styleUrls": [
                "./week-row.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./week-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cards",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Card[] | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Card } from 'src/app/interfaces/input.interfaces';\n\n@Component({\n  selector: 'app-week-row',\n  templateUrl: './week-row.component.html',\n  styleUrls: ['./week-row.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class WeekRowComponent {\n  @Input() cards: Card[] | undefined;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".row {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 20px;\n}\n\napp-day-card {\n  width: 12%;\n}\n",
                    "styleUrl": "./week-row.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"row\">\n  <app-day-card\n    *ngFor=\"let card of cards\"\n    [data]=\"card.activities\"\n    [day]=\"card.day\"\n    [date]=\"card.date\"\n  ></app-day-card>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-bb2f47ad0e01df345efb85a958d6286f60c425da0b5d88c880aa2184344fad77bd581d3a6e7eecb0deb588de03bff7a8bde2a9eb2f48096a8d78a066751599ad",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { DayCardComponent } from 'src/app/components/day-card/day-card.component';\nimport { PopoverBodyTextComponent } from './components/popover-body-text/popover-body-text.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WarningDayComponent } from './components/warning-day/warning-day.component';\nimport { CardFooterHiddenItemsComponent } from './components/card-footer-hidden-items/card-footer-hidden-items.component';\nimport { NumberDayComponent } from './components/number-day/number-day.component';\nimport { CardFooterHoursComponent } from './components/card-footer-hours/card-footer-hours.component';\nimport { TooltipCalendarComponent } from './components/tooltip-calendar/tooltip-calendar.component';\nimport { CardFooterComponent } from './components/card-footer/card-footer.component';\nimport { PopoverButtonComponent } from './components/popover-button/popover-button.component';\nimport { DayHeaderComponent } from './components/day-header/day-header.component';\nimport { PopoverBodyComponent } from './components/popover-body/popover-body.component';\nimport { AddActivityButtonComponent } from './components/add-activity-button/add-activity-button.component';\nimport { ItemDiaComponent } from './components/item-dia/item-dia.component';\nimport { ListaDiaComponent } from './components/lista-dia/lista-dia.component';\nimport { PopoverComponent } from './components/popover/popover.component';\nimport { HeaderPopoverComponent } from './components/header-popover/header-popover.component';\nimport { PopoverListFooterComponent } from './components/popover-list-footer/popover-list-footer.component';\nimport { CalendarHeaderTitleComponent } from './components/calendar-header-title/calendar-header-title.component';\nimport { SnackbarComponent } from './components/snackbar/snackbar.component';\nimport { ModalDeleteComponent } from './components/modal-delete/modal-delete.component';\nimport { ModalButtonsComponent } from './components/modal-buttons/modal-buttons.component';\nimport { PItemDiaComponent } from './components/p-item-dia/p-item-dia.component';\nimport { WeekRowComponent } from './components/week-row/week-row.component';\nimport { CalendarHeaderComponent } from './components/calendar-header/calendar-header.component';\nimport { CalendarComponent } from './components/calendar/calendar.component';\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WarningDayComponent,\n    NumberDayComponent,\n    CardFooterHoursComponent,\n    AddActivityButtonComponent,\n    CardFooterComponent,\n    PopoverButtonComponent,\n    TooltipCalendarComponent,\n    DayHeaderComponent,\n    AddActivityButtonComponent,\n    PopoverBodyComponent,\n    PopoverBodyTextComponent,\n    CardFooterHiddenItemsComponent,\n    ItemDiaComponent,\n    ListaDiaComponent,\n    DayCardComponent,\n    ListaDiaComponent,\n    PopoverComponent,\n    HeaderPopoverComponent,\n    PopoverListFooterComponent,\n    CalendarHeaderTitleComponent,\n    SnackbarComponent,\n    CardFooterHoursComponent,\n    DayCardComponent,\n    ModalDeleteComponent,\n    ModalButtonsComponent,\n    PItemDiaComponent,\n    WeekRowComponent,\n    CalendarHeaderComponent,\n    CalendarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: NZ_I18N, useValue: en_US }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddActivityButtonComponent"
                        },
                        {
                            "name": "AddActivityButtonComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CalendarComponent"
                        },
                        {
                            "name": "CalendarHeaderComponent"
                        },
                        {
                            "name": "CalendarHeaderTitleComponent"
                        },
                        {
                            "name": "CardFooterComponent"
                        },
                        {
                            "name": "CardFooterHiddenItemsComponent"
                        },
                        {
                            "name": "CardFooterHoursComponent"
                        },
                        {
                            "name": "CardFooterHoursComponent"
                        },
                        {
                            "name": "DayCardComponent"
                        },
                        {
                            "name": "DayCardComponent"
                        },
                        {
                            "name": "DayHeaderComponent"
                        },
                        {
                            "name": "HeaderPopoverComponent"
                        },
                        {
                            "name": "ItemDiaComponent"
                        },
                        {
                            "name": "ListaDiaComponent"
                        },
                        {
                            "name": "ListaDiaComponent"
                        },
                        {
                            "name": "ModalButtonsComponent"
                        },
                        {
                            "name": "ModalDeleteComponent"
                        },
                        {
                            "name": "NumberDayComponent"
                        },
                        {
                            "name": "PItemDiaComponent"
                        },
                        {
                            "name": "PopoverBodyComponent"
                        },
                        {
                            "name": "PopoverBodyTextComponent"
                        },
                        {
                            "name": "PopoverButtonComponent"
                        },
                        {
                            "name": "PopoverComponent"
                        },
                        {
                            "name": "PopoverListFooterComponent"
                        },
                        {
                            "name": "SnackbarComponent"
                        },
                        {
                            "name": "TooltipCalendarComponent"
                        },
                        {
                            "name": "WarningDayComponent"
                        },
                        {
                            "name": "WeekRowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-0dc291a0afd3272506872fe6fa763d13caf4b8fd5fcd9d9673ea721d0260167c3929f23647cd16ac134dd8c37af92788e0497290e40e237a1993e3e2cd47364b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Calendar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Calendar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Calendar_Day_Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-header/day-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Calendar_Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/calendar-header/calendar-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Calendar_Header_Title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/calendar-header/calendar-header-title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card_Day_Item",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-list/itemDía.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card_Day_List",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-list/lista-dia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card_Footer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/card-footer/card-footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card_Footer_Hidden_Items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/card-footer/hidden-items.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card_Footer_Hours",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/card-footer/Hours.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card_Number_Day",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-header/number-day.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Card_Warning_Day",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-header/warning-day.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Comment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Custom_snackbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Day_Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DayButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/add-activity-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GeneralButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/add-activity-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Modal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/modal/modal-delete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Modal_Buttons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/modal/modal-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "P_Item_Day",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-list/p-item-dia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Popover",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Popover_Body",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-body/popover-body.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Popover_Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/header-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Popover_List_Footer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-footer/popover-list-footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PopoverCloneButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PopoverDeleteButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PopoverUpdateButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Success_snackbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Task",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/add-activity-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({props:args})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AppComponent>",
                "defaultValue": "(args: AppComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CalendarComponent>",
                "defaultValue": "(args: CalendarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SnackbarComponent>",
                "defaultValue": "(args: SnackbarComponent) => ({\n\tprops: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tooltip-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TooltipCalendarComponent>",
                "defaultValue": "(args: TooltipCalendarComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/week-row.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<WeekRowComponent>",
                "defaultValue": "(args: WeekRowComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/calendar-header/calendar-header-title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/calendar-header/calendar-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CalendarHeaderComponent>",
                "defaultValue": "(args: CalendarHeaderComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({ props: args })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/modal/modal-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ModalButtonsComponent>",
                "defaultValue": "(args: ModalButtonsComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/modal/modal-delete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ModalDeleteComponent>",
                "defaultValue": "(args: ModalDeleteComponent) => ({\n    props: args,\n\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/header-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderPopoverComponent>",
                "defaultValue": "(args :HeaderPopoverComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PopoverComponent>",
                "defaultValue": "(args: PopoverComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/card-footer/Hours.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/card-footer/card-footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/card-footer/hidden-items.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-list/itemDía.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ItemDiaComponent>",
                "defaultValue": "(args :ItemDiaComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-list/lista-dia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ListaDiaComponent>",
                "defaultValue": "(args: ListaDiaComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-list/p-item-dia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PItemDiaComponent>",
                "defaultValue": "(args: PItemDiaComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PopoverButtonComponent>",
                "defaultValue": "(args: PopoverButtonComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-footer/popover-list-footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-header/day-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({ props: args })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-header/number-day.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NumberDayComponent>",
                "defaultValue": "(args: NumberDayComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/day-card/day-header/warning-day.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<WarningDayComponent>",
                "defaultValue": "(args: WarningDayComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({props:args})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/popover/popover-body/popover-body.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({ props: args })"
            },
            {
                "name": "TooltipCalendarActivity",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tooltip-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TooltipCalendarHours",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tooltip-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Week_Row",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/week-row.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/app.stories.ts": [
                {
                    "name": "Calendar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AppComponent>",
                    "defaultValue": "(args: AppComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/calendar.stories.ts": [
                {
                    "name": "Calendar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CalendarComponent>",
                    "defaultValue": "(args: CalendarComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/day-card/day-header/day-header.stories.ts": [
                {
                    "name": "Calendar_Day_Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-header/day-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-header/day-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({ props: args })"
                }
            ],
            "src/stories/calendar-header/calendar-header.stories.ts": [
                {
                    "name": "Calendar_Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/calendar-header/calendar-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/calendar-header/calendar-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CalendarHeaderComponent>",
                    "defaultValue": "(args: CalendarHeaderComponent) => ({\n    props: args,\n})"
                }
            ],
            "src/stories/calendar-header/calendar-header-title.stories.ts": [
                {
                    "name": "Calendar_Header_Title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/calendar-header/calendar-header-title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/calendar-header/calendar-header-title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/day-card/day-list/itemDía.stories.ts": [
                {
                    "name": "Card_Day_Item",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-list/itemDía.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-list/itemDía.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ItemDiaComponent>",
                    "defaultValue": "(args :ItemDiaComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/day-card/day-list/lista-dia.stories.ts": [
                {
                    "name": "Card_Day_List",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-list/lista-dia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-list/lista-dia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ListaDiaComponent>",
                    "defaultValue": "(args: ListaDiaComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/day-card/card-footer/card-footer.stories.ts": [
                {
                    "name": "Card_Footer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/card-footer/card-footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/card-footer/card-footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/day-card/card-footer/hidden-items.stories.ts": [
                {
                    "name": "Card_Footer_Hidden_Items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/card-footer/hidden-items.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/card-footer/hidden-items.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/day-card/card-footer/Hours.stories.ts": [
                {
                    "name": "Card_Footer_Hours",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/card-footer/Hours.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/card-footer/Hours.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/day-card/day-header/number-day.stories.ts": [
                {
                    "name": "Card_Number_Day",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-header/number-day.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-header/number-day.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NumberDayComponent>",
                    "defaultValue": "(args: NumberDayComponent) => ({\n    props: args,\n})"
                }
            ],
            "src/stories/day-card/day-header/warning-day.stories.ts": [
                {
                    "name": "Card_Warning_Day",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-header/warning-day.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-header/warning-day.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<WarningDayComponent>",
                    "defaultValue": "(args: WarningDayComponent) => ({\n    props: args,\n})"
                }
            ],
            "src/stories/popover/popover-body/popover-body-text.stories.ts": [
                {
                    "name": "Comment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Task",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({props:args})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/snackbar.stories.ts": [
                {
                    "name": "Custom_snackbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success_snackbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SnackbarComponent>",
                    "defaultValue": "(args: SnackbarComponent) => ({\n\tprops: args\n})"
                }
            ],
            "src/stories/day-card/day-card.stories.ts": [
                {
                    "name": "Day_Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({ props: args })"
                }
            ],
            "src/stories/add-activity-button.stories.ts": [
                {
                    "name": "DayButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/add-activity-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "GeneralButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/add-activity-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/add-activity-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({props:args})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/modal/modal-delete.stories.ts": [
                {
                    "name": "Modal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/modal/modal-delete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/modal/modal-delete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ModalDeleteComponent>",
                    "defaultValue": "(args: ModalDeleteComponent) => ({\n    props: args,\n\n})"
                }
            ],
            "src/stories/modal/modal-buttons.stories.ts": [
                {
                    "name": "Modal_Buttons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/modal/modal-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/modal/modal-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ModalButtonsComponent>",
                    "defaultValue": "(args: ModalButtonsComponent) => ({\n    props: args,\n})"
                }
            ],
            "src/stories/day-card/day-list/p-item-dia.stories.ts": [
                {
                    "name": "P_Item_Day",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-list/p-item-dia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/day-card/day-list/p-item-dia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PItemDiaComponent>",
                    "defaultValue": "(args: PItemDiaComponent) => ({\n    props: args,\n})"
                }
            ],
            "src/stories/popover/popover.stories.ts": [
                {
                    "name": "Popover",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PopoverComponent>",
                    "defaultValue": "(args: PopoverComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/popover/popover-body/popover-body.stories.ts": [
                {
                    "name": "Popover_Body",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-body/popover-body.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-body/popover-body.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({ props: args })"
                }
            ],
            "src/stories/popover/header-popover.stories.ts": [
                {
                    "name": "Popover_Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/header-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/header-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderPopoverComponent>",
                    "defaultValue": "(args :HeaderPopoverComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/popover/popover-footer/popover-list-footer.stories.ts": [
                {
                    "name": "Popover_List_Footer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-footer/popover-list-footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-footer/popover-list-footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/popover/popover-footer/popover-button.stories.ts": [
                {
                    "name": "PopoverCloneButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PopoverDeleteButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PopoverUpdateButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/popover/popover-footer/popover-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PopoverButtonComponent>",
                    "defaultValue": "(args: PopoverButtonComponent) => ({\n    props: args,\n})"
                }
            ],
            "src/stories/tooltip-calendar.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tooltip-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TooltipCalendarComponent>",
                    "defaultValue": "(args: TooltipCalendarComponent) => ({\n    props: args,\n})"
                },
                {
                    "name": "TooltipCalendarActivity",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tooltip-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TooltipCalendarHours",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tooltip-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/week-row.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/week-row.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<WeekRowComponent>",
                    "defaultValue": "(args: WeekRowComponent) => ({\n    props: args,\n})"
                },
                {
                    "name": "Week_Row",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/week-row.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/add-activity-button/add-activity-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddActivityButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/calendar-header-title/calendar-header-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarHeaderTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/calendar-header/calendar-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/calendar/calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card-footer-hidden-items/card-footer-hidden-items.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardFooterHiddenItemsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card-footer-hours/card-footer-hours.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardFooterHoursComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card-footer/card-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/day-card/day-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DayCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/day-header/day-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DayHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header-popover/header-popover.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderPopoverComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header-popover/header-popover.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ItemDay",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-dia/item-dia.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemDiaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/lista-dia/lista-dia.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListaDiaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal-buttons/modal-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal-delete/modal-delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalDeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/number-day/number-day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/p-item-dia/p-item-dia.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PItemDiaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popover-body-text/popover-body-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoverBodyTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popover-body/popover-body.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoverBodyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popover-button/popover-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoverButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popover-list-footer/popover-list-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoverListFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/popover/popover.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoverComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tooltip-calendar/tooltip-calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipCalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/warning-day/warning-day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WarningDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/week-row/week-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WeekRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/delete-modal/service-delete-modal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ServiceDeleteModalService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/focus-card/focus-card.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FocusCardService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/item-popover/on-mouse-over-item.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OnMouseOverItemService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/services/snackbar/snackbar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SnackbarService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/add-activity-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DayButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/add-activity-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GeneralButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/add-activity-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/app.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Calendar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/app.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/calendar-header/calendar-header-title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Calendar_Header_Title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/calendar-header/calendar-header-title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/calendar-header/calendar-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Calendar_Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/calendar-header/calendar-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Calendar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/card-footer/Hours.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card_Footer_Hours",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/card-footer/Hours.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/card-footer/card-footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card_Footer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/card-footer/card-footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/card-footer/hidden-items.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card_Footer_Hidden_Items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/card-footer/hidden-items.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Day_Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-header/day-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Calendar_Day_Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-header/day-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-header/number-day.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card_Number_Day",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-header/number-day.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-header/warning-day.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card_Warning_Day",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-header/warning-day.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-list/itemDía.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card_Day_Item",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-list/itemDía.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-list/lista-dia.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card_Day_List",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-list/lista-dia.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-list/p-item-dia.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "P_Item_Day",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/day-card/day-list/p-item-dia.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/modal/modal-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Modal_Buttons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/modal/modal-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/modal/modal-delete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Modal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/modal/modal-delete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/header-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Popover_Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/header-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Comment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-body/popover-body-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-body/popover-body.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Popover_Body",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-body/popover-body.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PopoverCloneButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PopoverDeleteButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PopoverUpdateButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-footer/popover-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-footer/popover-list-footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Popover_List_Footer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover-footer/popover-list-footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Popover",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Custom_snackbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success_snackbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tooltip-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tooltip-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TooltipCalendarActivity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tooltip-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TooltipCalendarHours",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/week-row.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/week-row.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Week_Row",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}