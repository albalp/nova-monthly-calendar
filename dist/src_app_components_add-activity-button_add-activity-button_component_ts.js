"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunknova_monthly_calendar"] = globalThis["webpackChunknova_monthly_calendar"] || []).push([["src_app_components_add-activity-button_add-activity-button_component_ts"],{

/***/ "./src/app/components/add-activity-button/add-activity-button.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/components/add-activity-button/add-activity-button.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AddActivityButtonComponent\": () => (/* binding */ AddActivityButtonComponent)\n/* harmony export */ });\n/* harmony import */ var windowed_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! windowed-observable */ \"./node_modules/windowed-observable/dist/windowed-observable.esm.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"webpack/sharing/consume/default/@angular/core/@angular/core\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_1__);\nvar _dec, _dec2, _class, _class2, _descriptor;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n\n\nlet AddActivityButtonComponent = (_dec = (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({\n  selector: 'app-add-activity-button',\n  templateUrl: './add-activity-button.component.html',\n  styleUrls: ['./add-activity-button.component.scss'],\n  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewEncapsulation.Emulated\n}), _dec2 = (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(), _dec(_class = (_class2 = class AddActivityButtonComponent {\n  constructor() {\n    _initializerDefineProperty(this, \"type\", _descriptor, this);\n\n    _defineProperty(this, \"modalObservable\", new windowed_observable__WEBPACK_IMPORTED_MODULE_0__.Observable('addActivityModal'));\n\n    _defineProperty(this, \"isPublished\", false);\n  }\n\n  handleClick() {\n    this.modalObservable.publish(true);\n    this.isPublished = true;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"type\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 'general';\n  }\n})), _class2)) || _class);\n\n//# sourceURL=webpack://nova-monthly-calendar/./src/app/components/add-activity-button/add-activity-button.component.ts?");

/***/ }),

/***/ "./node_modules/windowed-observable/dist/windowed-observable.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/windowed-observable/dist/windowed-observable.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Observable\": () => (/* binding */ Observable)\n/* harmony export */ });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar EVENTS = '__events__';\nvar SHARED = '__shared__';\nvar OBSERVERS = '__observers__';\nvar Observable = /*#__PURE__*/function () {\n  function Observable(namespace) {\n    this.dispatch = this.publish;\n    Observable.initialize();\n    this.namespace = namespace;\n  } // istanbul ignore next\n\n\n  Observable.initialize = function initialize() {\n    if (!window[SHARED]) {\n      var _window$SHARED;\n\n      window[SHARED] = (_window$SHARED = {}, _window$SHARED[EVENTS] = {}, _window$SHARED[OBSERVERS] = {}, _window$SHARED);\n    }\n\n    if (!window[SHARED][EVENTS]) {\n      window[SHARED][EVENTS] = {};\n    }\n\n    if (!window[SHARED][OBSERVERS]) {\n      window[SHARED][OBSERVERS] = {};\n    }\n  };\n\n  var _proto = Observable.prototype;\n\n  _proto.getEvents = function getEvents() {\n    return this.events;\n  };\n\n  _proto.getLastEvent = function getLastEvent() {\n    var events = this.events;\n\n    if (!events.length) {\n      return;\n    }\n\n    var lastEvent = events[events.length - 1];\n    return lastEvent;\n  };\n\n  _proto.publish = function publish(data) {\n    var events = this.events;\n    var lastEvent = this.getLastEvent();\n    this.observers.forEach(function (observer) {\n      return observer(data, {\n        events: events,\n        lastEvent: lastEvent\n      });\n    });\n    this.events.push(data);\n  };\n\n  _proto.subscribe = function subscribe(observer) {\n    this.observers = this.observers.concat(observer);\n  };\n\n  _proto.unsubscribe = function unsubscribe(observer) {\n    this.observers = this.observers.filter(function (obs) {\n      return obs !== observer;\n    });\n  };\n\n  _proto.clear = function clear() {\n    var events = this.events;\n    var lastEvent = this.getLastEvent();\n    this.observers.forEach(function (observer) {\n      return observer(undefined, {\n        events: events,\n        lastEvent: lastEvent\n      });\n    });\n    this.events = [];\n    this.observers = [];\n  };\n\n  _createClass(Observable, [{\n    key: \"namespace\",\n    set: function set(namespace) {\n      this._namespace = namespace; // istanbul ignore next\n\n      if (!this.events) this.events = []; // istanbul ignore next\n\n      if (!this.observers) this.observers = [];\n    }\n  }, {\n    key: \"events\",\n    get: function get() {\n      return window[SHARED][EVENTS][this._namespace];\n    },\n    set: function set(newEvents) {\n      window[SHARED][EVENTS][this._namespace] = newEvents;\n    }\n  }, {\n    key: \"observers\",\n    get: function get() {\n      return window[SHARED][OBSERVERS][this._namespace];\n    },\n    set: function set(newObservers) {\n      window[SHARED][OBSERVERS][this._namespace] = newObservers;\n    }\n  }]);\n\n  return Observable;\n}();\n\n\n//# sourceMappingURL=windowed-observable.esm.js.map\n\n\n//# sourceURL=webpack://nova-monthly-calendar/./node_modules/windowed-observable/dist/windowed-observable.esm.js?");

/***/ })

}]);